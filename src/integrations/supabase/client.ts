
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://lgxguilkvdilgwoheive.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxneGd1aWxrdmRpbGd3b2hlaXZlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4NjA4MDcsImV4cCI6MjA1NzQzNjgwN30.gu3CsojrHQR4bWjmzwacPubpqGsUgHCjAJ6aFqVfubw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Check and verify access to review-photos bucket
const initStorage = async () => {
  try {
    const { data: buckets, error } = await supabase.storage.listBuckets();
    
    if (error) {
      console.error('Error checking storage buckets:', error);
      return;
    }
    
    const bucketExists = buckets?.some(bucket => bucket.name === 'review-photos');
    
    if (bucketExists) {
      console.log('review-photos bucket exists');
      
      // Test access to the bucket
      const { data: files, error: filesError } = await supabase.storage
        .from('review-photos')
        .list();
        
      if (filesError) {
        console.error('Error accessing review-photos bucket:', filesError);
      } else {
        console.log(`review-photos bucket accessible, contains ${files.length} files`);
      }
    } else {
      console.error('Bucket "review-photos" does not exist. Please create it in the Supabase dashboard.');
    }
  } catch (error) {
    console.error('Error checking storage buckets:', error);
  }
};

// Call initialization function
initStorage();

// Maximum file size in bytes (5 MB)
export const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB
